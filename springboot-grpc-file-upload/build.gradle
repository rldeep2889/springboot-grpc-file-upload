plugins {
    id 'org.springframework.boot' version '2.6.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.google.protobuf' version '0.8.18'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

/////////////////
//Java 17 stuff//
/////////////////
java {
    toolchain

            { languageVersion = JavaLanguageVersion.of(17) }
}

tasks.withType(JavaCompile)

        { options.compilerArgs += "--enable-preview" }
tasks.withType(Test)

        { jvmArgs += "--enable-preview" }
tasks.withType(JavaExec)

        { jvmArgs += '--enable-preview' }
/////////////////
/////////////////
/////////////////

repositories {
    mavenCentral()
}

dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'

//    compileOnly("org.projectlombok:lombok:${lombokVersion}")
//    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    // gRPC
    implementation 'io.grpc:grpc-netty-shaded:1.39.0'
    implementation 'io.grpc:grpc-protobuf:1.39.0'
    implementation 'io.grpc:grpc-stub:1.39.0'

    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

protobuf {
    protoc {
        // for Apple M1, add protoc_platform=osx-x86_64 in $HOME/.gradle/gradle.properties
        if (project.hasProperty('protoc_platform')) {
            artifact = "com.google.protobuf:protoc:3.17.3:${protoc_platform}"
        } else {
            artifact = "com.google.protobuf:protoc:3.17.3"
        }
    }
    plugins {
        grpc {
            // for Apple M1, add protoc_platform=osx-x86_64 in $HOME/.gradle/gradle.properties
            if (project.hasProperty('protoc_platform')) {
                artifact = "io.grpc:protoc-gen-grpc-java:1.39.0:${protoc_platform}"
            } else {
                artifact = "io.grpc:protoc-gen-grpc-java:1.39.0"
            }
        }
    }
    generateProtoTasks {
        all().each {
            it.group = 'protoTasks'
        }

        all()*.plugins {
            grpc {}
        }
    }
}

tasks.whenTaskAdded { task ->
    // https://github.com/google/protobuf-gradle-plugin/issues/246
    // We don't have any tests inside our protobuf lib
    if (task.name.startsWith("extractIncludeTestProto")) {
        task.enabled = false
    }
}
